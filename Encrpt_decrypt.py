from Crypto.PublicKey import RSA
from Crypto.Cipher import PKCS1_v1_5 as Cipher_PKCS1_v1_5
from base64 import b64decode,b64encode
import requests


def enc(msg):
    pubkey = 'MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAnU1I2lqhqbiSFsmDhUiuyHYtvMyNoNYA9MNUK3tb4h+S38tr8FemgAdEVnxuFvBatczXjWaxJ2ZDZsIbpuW+ow2tfP6U2SnsI/FMPfQ+DmrFwkMojr7ThOQ2TUUvH5VateSoxrxQ+Dp0Ki3g+xNFmxU+tM7Zb+3JvfkBwqKFjGJ1K+QXgotk2dR8tewBADmBwPWgMY1DuZNUZRt0J7HSaJsfSXVef2SZzJQ592PVZHyd/GJVcTb11jafIbrEdazOYqmMOsW/urK9Px5CuGG5ZoiTpWZFGOlPBkGdbCO9pivhQm57s6/BOmmdaweD3XaQ30CiikyBRFT+5JK6OvWva/sCB0qhyS+FhtQVaeN85O50g7zp5eaTYP6Vo8lU2Bnu+1AT4OGWqWyPQiSzDfqiIOzI/GhJdCeCZPuGdmCSA/76b/KfrOHXhR4nuCf20xa4KYH5E1lOXjsDXs83WRRYayMx05RiHWIgHze3Vcm5nV0grf9h3kLZ1OzPYRPhD2zTDIzLUbG3YlCvK25YCbnV0YA5jELXeSiecMrYEuUdiQS5Fbq7EIN16smbKa9G+h6lccgn5OidxQ6hkS4f1yqu+rrDVUyOmC5ia/aHOz0woBQOzvo9bAVtrilUxlKwTcyo1RH3VNnLjF/xOrUi4mCywEnEfMjGCj5YKUH5Is8oUZ0CAwEAAQ=='
    keyDER = b64decode(pubkey)
    keyPub = RSA.importKey(keyDER)
    cipher = Cipher_PKCS1_v1_5.new(keyPub)
    cipher_text = cipher.encrypt(msg)
    emsg = b64encode(cipher_text)
    return emsg


def dec(msg):
    prikey = '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'
    dmsg = b64decode(msg)
    keyDER = b64decode(prikey)
    keyPri = RSA.importKey(keyDER)
    cipher = Cipher_PKCS1_v1_5.new(keyPri)
    cipher_text = cipher.decrypt(dmsg,"ascii", expected_pt_len=0)
    return cipher_text




msg = b'{"contactNumber":"+917738599907"}'

print(enc(msg))

print(dec(enc(msg)))

